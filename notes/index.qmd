---
title: "Parallel Graph Algorithms"
format:
    pdf:
        toc: true
        number-sections: true
        colorlinks: true
---

# Definitions

## Sequential Graph Coloring

Algorithm, the step by step all the nodes and all of them
Colored. We can only change the order.

## Jacobian Matrix

[[From Wikipedia](https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant)]

In vector calculus, the Jacobian matrix of a vector-valued function of several
variables is the matrix of all its first-order partial derivatives. When this
matrix is square, that is, when the function takes the same number of variables
as input as the number of vector components of its output, its determinant is
referred to as the Jacobian determinant.

Suppose $f : \mathbb{R}^n \to \mathbb{R}^m$ is a function such that each of its
first-order partial derivatives exists on $\mathbb{R}^n$. This function takes a
point $x \in \mathbb{R}^n$ as input and produces the vector
$f(x) \in \mathbb{R}^m$ as output. Then the Jacobian matrix of $f$, denoted
$\textbf{J}_f \in \mathbb{R}^{m \times n}$ is

$$
\textbf{J}_f = \begin{bmatrix}
\frac{\partial f_1}{\partial x_1} & \cdots & \frac{\partial f_1}{\partial x_n} \\
\vdots & \ddots & \vdots \\
\frac{\partial f_m}{\partial x_1} & \cdots & \frac{\partial f_m}{\partial x_n}
\end{bmatrix}
$$

## Hessian Matrix

[[From Wikipedia](https://en.wikipedia.org/wiki/Hessian_matrix)]

In mathematics, the Hessian matrix, Hessian or (less commonly) Hesse matrix is a
square matrix of second-order partial derivatives of a scalar-valued function,
or scalar field. It describes the local curvature of a function of many
variables.


## Parallelization Frameworks

### OpenMP

[[From Wikipedia](https://en.wikipedia.org/wiki/OpenMP)]

[[Documentation](https://enccs.github.io/openmp-gpu/)]

### CUDA

[[From Wikipedia](https://en.wikipedia.org/wiki/CUDA)]

### Kokkos

[[From Wikipedia](https://en.wikipedia.org/wiki/Kokkos)]

## Idea for Algorithm

### Variables

\begin{tabular}{ll}
    $G \in \mathbb{R}^{n\times n}$ & Adjacency matrix of the graph with $n$ vertices \\
    $v_{next} \in \mathbb{N}$ & Next vertex to be colored \\
    $v_{color} \in \mathbb{N}$ & Color of the vertex \\
    $R \in \mathbb{R}^n$ & Rank of each vertex of $G$ \\
\end{tabular}

### Algorithm

- Initialize $R$ with the rank of each vertex
- Initialize $v_{next}$ with the vertex with the highest rank
- For $i = 0$ to $n-1$:
  - Set the $i$-th row and $i$-th column of $G$ to zero
  - Calculate the rank of each vertex of $G$
    - Parallelize this step
    - Rows are batched based on their previous rank
    - When parallel processes are done, they update $R$ and $v_{next}$
  - Update $v_{next}$ to the next vertex to be colored

